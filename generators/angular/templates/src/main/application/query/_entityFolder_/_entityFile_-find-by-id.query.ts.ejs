import { random } from "avanng/common/core";
import { Observable } from 'rxjs';
import { BaseQueryHandler, safeQuery } from "avanng/domain";
import { BaseQuery } from "avanng/domain/base-query";
import { I<%= entityAngularName %> } from '@domain/model/<%= entityFileName %>.model';
import { <%= entityAngularName %>PersistenceQueryPort } from "@application/port/<%= entityFolderName %>/<%= entityFileName %>-persistence-query.port";

const __NAME__ = random();

export class <%= entityAngularName %>FindByIdQuery implements BaseQuery<I<%= entityAngularName %> | null> {
  queryId = __NAME__;

  constructor(public id: <%= tsKeyType %>) {
  }
}

export class <%= entityAngularName %>FindByIdQueryHandler implements BaseQueryHandler<<%= entityAngularName %>FindByIdQuery, I<%= entityAngularName %> | null> {
  queryId = __NAME__;

  constructor(private <%= entityInstance %>PersistenceQueryPort: <%= entityAngularName %>PersistenceQueryPort) {
  }

  handle(query: <%= entityAngularName %>FindByIdQuery): Observable<I<%= entityAngularName %> | null> {
    return this.<%= entityInstance %>PersistenceQueryPort.find(query.id);
  }
}
